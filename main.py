import os
import logging
from telegram import Update
from telegram.ext import Updater, CommandHandler, CallbackContext, ChatMemberHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ID –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFICATION_GROUP = None

def start(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    update.message.reply_text(
        "üìä –¢—Ä–µ–∫–µ—Ä –ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–æ–∫ –∏ –æ—Ç–ø–∏—Å–æ–∫\n\n"
        "–ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:\n"
        "1. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –ö–ê–ù–ê–õ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        "2. –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–≤–æ '–ò–∑–º–µ–Ω–µ–Ω–∏–µ —á—É–∂–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π'\n"
        "3. –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤ –ì–†–£–ü–ü–£ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
        "4. –û—Ç–ø—Ä–∞–≤–∏—Ç—å /set_group –≤ –≥—Ä—É–ø–ø–µ"
    )

def set_group(update: Update, context: CallbackContext):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    global NOTIFICATION_GROUP
    chat_id = update.effective_chat.id
    chat_type = update.effective_chat.type
    
    if chat_type not in ['group', 'supergroup']:
        update.message.reply_text("‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –≥—Ä—É–ø–ø–µ!")
        return
    
    NOTIFICATION_GROUP = chat_id
    update.message.reply_text(f"‚úÖ –ì—Ä—É–ø–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞! ID: {chat_id}")
    logger.info(f"–ì—Ä—É–ø–ø–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {chat_id}")

def handle_member_changes(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥–ø–∏—Å–æ–∫/–æ—Ç–ø–∏—Å–æ–∫"""
    global NOTIFICATION_GROUP
    
    try:
        if update.chat_member is None:
            return
            
        change = update.chat_member
        old_status = change.old_chat_member.status
        new_status = change.new_chat_member.status
        user = change.from_user
        chat = change.chat
        
        logger.info(f"–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ '{chat.title}': {user.first_name} - {old_status} -> {new_status}")
        
        # –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –∫–∞–Ω–∞–ª–∞–º–∏
        if chat.type != 'channel':
            return
            
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if user.username:
            name = f"@{user.username}"
        else:
            name = user.first_name or f"ID{user.id}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if NOTIFICATION_GROUP:
            # –ù–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
            if old_status in ['left', 'kicked'] and new_status == 'member':
                message = f"‚úÖ {name} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª"
                context.bot.send_message(NOTIFICATION_GROUP, message)
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message}")
            
            # –û—Ç–ø–∏—Å–∫–∞
            elif old_status == 'member' and new_status in ['left', 'kicked']:
                message = f"‚ùå {name} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞"
                context.bot.send_message(NOTIFICATION_GROUP, message)
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    token = os.getenv('BOT_TOKEN')
    
    if not token:
        logger.error("‚ùå –û–®–ò–ë–ö–ê: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return
        
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º Updater –≤–º–µ—Å—Ç–æ Application –¥–ª—è –≤–µ—Ä—Å–∏–∏ 13.x
    updater = Updater(token, use_context=True)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    dp = updater.dispatcher
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("set_group", set_group))
    dp.add_handler(ChatMemberHandler(handle_member_changes))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
