import os
import logging
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –•—Ä–∞–Ω–∏–º ID –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
notification_group_id = None

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "ü§ñ –ë–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª\n\n"
        "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
        "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
        "2. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
        "3. –í –≥—Ä—É–ø–ø–µ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /set_group\n"
        "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–∞–Ω–¥–æ–π /check\n\n"
        "–ë–æ—Ç –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –∫–∞–Ω–∞–ª–µ!"
    )

async def set_group(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    global notification_group_id
    chat_id = update.effective_chat.id
    
    if update.effective_chat.type not in ['group', 'supergroup']:
        await update.message.reply_text("‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ!")
        return
    
    notification_group_id = chat_id
    await update.message.reply_text(
        f"‚úÖ –ì—Ä—É–ø–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!\n"
        f"ID –≥—Ä—É–ø–ø—ã: {chat_id}\n"
        f"–¢–µ–ø–µ—Ä—å –¥–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫–∏."
    )
    logger.info(f"Notification group set: {chat_id}")

async def check(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    global notification_group_id
    
    if notification_group_id:
        await update.message.reply_text(
            f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏:\n"
            f"–ì—Ä—É–ø–ø–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notification_group_id}\n"
            f"–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
        )
    else:
        await update.message.reply_text(
            "‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã:\n"
            "1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É\n"
            "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /set_group –≤ –≥—Ä—É–ø–ø–µ\n"
            "3. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        )

async def debug_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–ª—è –æ—Ç–ª–∞–¥–∫–∏ - –ª–æ–≥–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    logger.info(f"DEBUG - Message received: {update.message}")

async def my_chat_member_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞"""
    logger.info(f"MY_CHAT_MEMBER update: {update.my_chat_member}")

async def chat_member_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"""
    global notification_group_id
    
    try:
        logger.info(f"CHAT_MEMBER update received!")
        logger.info(f"Full update: {update}")
        
        if update.chat_member:
            chat_member = update.chat_member
            logger.info(f"Chat: {chat_member.chat}")
            logger.info(f"User: {chat_member.from_user}")
            logger.info(f"Old status: {chat_member.old_chat_member.status}")
            logger.info(f"New status: {chat_member.new_chat_member.status}")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = chat_member.from_user
            name = user.first_name or ""
            if user.last_name:
                name += f" {user.last_name}"
            if user.username:
                name = f"@{user.username}"
            if not name.strip():
                name = f"User_{user.id}"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
            old_status = chat_member.old_chat_member.status
            new_status = chat_member.new_chat_member.status
            
            if notification_group_id:
                if old_status in ['left', 'kicked'] and new_status == 'member':
                    message = f"‚úÖ {name} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª"
                    await context.bot.send_message(chat_id=notification_group_id, text=message)
                    logger.info(f"Sent: {message}")
                
                elif old_status == 'member' and new_status in ['left', 'kicked']:
                    message = f"‚ùå {name} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞"
                    await context.bot.send_message(chat_id=notification_group_id, text=message)
                    logger.info(f"Sent: {message}")
        
    except Exception as e:
        logger.error(f"Error in chat_member_handler: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    bot_token = os.getenv('BOT_TOKEN')
    
    if not bot_token:
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(bot_token).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("set_group", set_group))
    application.add_handler(CommandHandler("check", check))
    application.add_handler(MessageHandler(filters.ALL, debug_message))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    application.add_handler(MessageHandler(filters.StatusUpdate.ALL, chat_member_handler))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ —Å –í–°–ï–ú–ò —Ç–∏–ø–∞–º–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω —Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π...")
    application.run_polling(
        allowed_updates=Update.ALL_TYPES,
        drop_pending_updates=True
    )

if __name__ == '__main__':
    main()
